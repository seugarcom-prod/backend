{
  "openapi": "3.0.0",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "schemas": {
    "Restaurant": {
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "socialName": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "zipCode": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "number"
              },
              "complement": {
                "type": "string"
              }
            }
          },
          "rating": {
            "type": "number"
          },
          "specialty": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "admin": {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              },
              "cpf": {
                "type": "string"
              }
            }
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/src/models/RestaurantUnit"
            }
          },
          "attendants": {
            "type": "array",
            "items": {
              "$ref": "#/src/models/User"
            }
          }
        }
      }
    },
    "RestaurantUnit": {
      "type": "object",
      "properties": {
        "cnpj": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "zipCode": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "complement": {
              "type": "string"
            }
          }
        },
        "contact": {
          "type": "string"
        },
        "attendants": {
          "type": "array",
          "items": {
            "$ref": "#/src/models/User"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "MANAGER",
            "ATTENDANT",
            "CLIENT"
          ]
        }
      }
    },
    "Foods": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "price": {
          "type": "number"
        },
        "isAvailable": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "RevenueReport": {
      "type": "object",
      "properties": {
        "totalRevenue": {
          "type": "number",
          "description": "Total revenue for the period"
        },
        "comparisonWithLastPeriod": {
          "type": "number",
          "description": "Percentage change compared to previous period"
        },
        "periodRevenue": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "period": {
                "type": "string",
                "description": "Name of the period (e.g., 'Jan', 'Feb')"
              },
              "value": {
                "type": "number",
                "description": "Revenue for this period"
              }
            }
          }
        }
      }
    },
    "OrdersReport": {
      "type": "object",
      "properties": {
        "totalOrders": {
          "type": "number",
          "description": "Total number of orders"
        },
        "realizadosHoje": {
          "type": "number",
          "description": "Orders placed today"
        },
        "cancelados": {
          "type": "number",
          "description": "Cancelled orders"
        },
        "emProducao": {
          "type": "number",
          "description": "Orders currently in production"
        },
        "monthlyOrdersCount": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "month": {
                "type": "string",
                "description": "Month name (e.g., 'Jan', 'Feb')"
              },
              "count": {
                "type": "number",
                "description": "Number of orders in this month"
              }
            }
          }
        },
        "ordersByStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Order status"
              },
              "count": {
                "type": "number",
                "description": "Number of orders with this status"
              }
            }
          }
        }
      }
    },
    "TopProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Product ID"
        },
        "name": {
          "type": "string",
          "description": "Product name"
        },
        "count": {
          "type": "number",
          "description": "Number of times this product was ordered"
        },
        "revenue": {
          "type": "number",
          "description": "Total revenue generated by this product"
        }
      }
    },
    "DailyRevenue": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "Date in YYYY-MM-DD format"
        },
        "value": {
          "type": "number",
          "description": "Revenue for this day"
        }
      }
    },
    "DashboardSummary": {
      "type": "object",
      "properties": {
        "revenue": {
          "$ref": "#/schemas/RevenueReport"
        },
        "orders": {
          "$ref": "#/schemas/OrdersReport"
        },
        "topProducts": {
          "type": "array",
          "items": {
            "$ref": "#/schemas/TopProduct"
          }
        }
      }
    }
  },
  "info": {
    "title": "Seu Garçom Docs",
    "version": "0.3.0",
    "description": "Seu Garçom Swagger Docs"
  },
  "servers": [
    {
      "url": "http://localhost:3333/v0",
      "description": "Test API"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "summary": "User login",
        "description": "Endpoint for login",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "in": "body",
          "required": true
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Invalid format"
          },
          "404": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Logged in!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "redirectRoute": {
                      "type": "string",
                      "description": "Route to redirect after login"
                    },
                    "sessionToken": {
                      "type": "string",
                      "description": "Authentication token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/guest/": {
      "post": {
        "summary": "Guest login",
        "description": "Endpoint for guest who don't wish to register on system",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "in": "body",
          "required": true
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cpf": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Invalid format"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "200": {
            "description": "Logged in!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cpf": {
                      "type": "String"
                    },
                    "email": {
                      "type": "String"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout/": {
      "patch": {
        "summary": "User logout",
        "description": "Endpoint for user logout",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "in": "body",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "accessToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Invalid format"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "200": {
            "description": "Logged in!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "email": {
                      "type": "String"
                    },
                    "password": {
                      "type": "String"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/": {
      "post": {
        "summary": "User register for admin",
        "description": "Endpoint for register",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "in": "body",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "CPF": {
                    "type": "string"
                  },
                  "role": {
                    "type": "Enum",
                    "value": [
                      "ADMIN",
                      "MANAGER",
                      "ATTENDANT"
                    ]
                  }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Fulano",
                    "lastName": "Cicrano",
                    "email": "jubinilson_godinilson@gmail.com",
                    "phone": "+5583999998888",
                    "CPF": "999.999.999-99",
                    "role": "ATTENDANT",
                    "password": "senha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "User already exists"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Invalid format"
          },
          "201": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "CPF": {
                      "type": "string"
                    },
                    "role": {
                      "type": "Enum",
                      "value": "CLIENT"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/list/": {
      "get": {
        "summary": "Get all registered Users",
        "description": "Endpoint for list users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "in": "body",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "CPF": {
                    "type": "string"
                  },
                  "role": {
                    "type": "Enum",
                    "value": [
                      "ADMIN",
                      "MANAGER",
                      "ATTENDANT",
                      "CLIENT"
                    ]
                  }
                }
              }
            },
            "examples": {
              "user": {
                "value": {
                  "firstName": "Fulano",
                  "lastName": "Cicrano",
                  "email": "jubinilson_godinilson@gmail.com",
                  "phone": "+5583999998888",
                  "CPF": "999.999.999-99",
                  "role": "CLIENT",
                  "password": "senha123"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "authentication": {
                      "type": "string"
                    },
                    "role": {
                      "type": "Enum",
                      "value": [
                        "ADMIN",
                        "MANAGER",
                        "ATTENDANT",
                        "CLIENT"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/get/:id": {
      "get": {
        "summary": "Get registered User by Id",
        "description": "Endpoint to get user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "CPF",
            "type": "string",
            "in": "query",
            "description": "User CPF for search",
            "required": false
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "User name for search",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "CPF": {
                      "type": "string"
                    },
                    "role": {
                      "type": "Enum",
                      "value": [
                        "ADMIN",
                        "MANAGER",
                        "ATTENDANT",
                        "CLIENT"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/update/": {
      "patch": {
        "summary": "Update registered User",
        "description": "Endpoint to update user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "CPF": {
                    "type": "string"
                  },
                  "role": {
                    "type": "Enum",
                    "value": [
                      "ADMIN",
                      "MANAGER",
                      "ATTENDANT",
                      "CLIENT"
                    ]
                  }
                }
              }
            },
            "examples": {
              "user": {
                "value": {
                  "firstName": "Cicrano",
                  "lastName": "Cicaranos",
                  "email": "jubinilson_thesicanilson@gmail.com",
                  "phone": "+5583999998888",
                  "CPF": "999.999.999-99",
                  "role": "MANAGER",
                  "password": "senha123"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Invalid format"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "CPF": {
                      "type": "string"
                    },
                    "role": {
                      "type": "Enum",
                      "value": [
                        "ADMIN",
                        "MANAGER",
                        "ATTENDANT",
                        "CLIENT"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/delete/": {
      "delete": {
        "summary": "Delete registered User",
        "description": "Endpoint to delete user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "authentication": {
                  "type": "string"
                },
                "role": {
                  "type": "Enum",
                  "value": [
                    "ADMIN",
                    "MANAGER",
                    "ATTENDANT",
                    "CLIENT"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Invalid format"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "authentication": {
                      "type": "string"
                    },
                    "role": {
                      "type": "Enum",
                      "value": [
                        "ADMIN",
                        "MANAGER",
                        "ATTENDANT",
                        "CLIENT"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurant/": {
      "post": {
        "summary": "Register a restaurant",
        "description": "Endpoint to register a restaurant",
        "tags": [
          "Restaurants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "string"
                  },
                  "cnpj": {
                    "type": "string"
                  },
                  "socialName": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "zipCode": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "number"
                      },
                      "complement": {
                        "type": "string"
                      }
                    }
                  },
                  "rating": {
                    "type": "number"
                  },
                  "specialty": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "admin": {
                    "type": "object",
                    "properties": {
                      "fullName": {
                        "type": "string"
                      },
                      "cpf": {
                        "type": "string"
                      }
                    }
                  },
                  "units": {
                    "type": "array",
                    "items": {
                      "$ref": "#/src/models/RestaurantUnit"
                    }
                  },
                  "attendants": {
                    "type": "array",
                    "items": {
                      "$ref": "#/src/models/User"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "socialName": {
                      "type": "string"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "zipCode": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "number": {
                          "type": "number"
                        },
                        "complement": {
                          "type": "string"
                        }
                      }
                    },
                    "rating": {
                      "type": "number"
                    },
                    "specialty": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "admin": {
                      "type": "object",
                      "properties": {
                        "fullName": {
                          "type": "string"
                        },
                        "cpf": {
                          "type": "string"
                        }
                      }
                    },
                    "units": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/RestaurantUnit"
                      }
                    },
                    "attendants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Restaurant already exists!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/restaurant/list/": {
      "get": {
        "summary": "List all registered restaurant",
        "description": "Endpoint to list registered Restaurants",
        "tags": [
          "Restaurants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "string"
                  },
                  "cnpj": {
                    "type": "string"
                  },
                  "socialName": {
                    "type": "string"
                  },
                  "address": {
                    "zipCode": "string",
                    "street": "string",
                    "number": "number",
                    "complement": "string"
                  },
                  "rating": {
                    "type": "number"
                  },
                  "specialty": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "admin": {
                    "fullName": "string",
                    "cpf": "string"
                  },
                  "units": {
                    "type": "array",
                    "$ref": "RestaurantUnit"
                  },
                  "attendants": {
                    "type": "array",
                    "$ref": "User"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "rating": {
                      "type": "number"
                    },
                    "units": {
                      "type": "array",
                      "$ref": "RestaurantUnit"
                    },
                    "attendants": {
                      "type": "array",
                      "$ref": "User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurant/get/:id/": {
      "get": {
        "summary": "Get registered Restaurant by Id",
        "description": "Endpoint to get registered restaurant by id",
        "tags": [
          "Restaurants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "name",
          "type": "string",
          "in": "query",
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "socialName": {
                      "type": "string"
                    },
                    "address": {
                      "zipCode": "string",
                      "street": "string",
                      "number": "number",
                      "complement": "string"
                    },
                    "rating": {
                      "type": "number"
                    },
                    "specialty": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "admin": {
                      "fullName": "string",
                      "cpf": "string"
                    },
                    "units": {
                      "type": "array",
                      "$ref": "RestaurantUnit"
                    },
                    "attendants": {
                      "type": "array",
                      "$ref": "User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurant/:id/update/": {
      "patch": {
        "summary": "Update registered Restaurant",
        "description": "Endpoint to update restaurant",
        "tags": [
          "Restaurants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "logo": {
                  "type": "string"
                },
                "cnpj": {
                  "type": "string"
                },
                "socialName": {
                  "type": "string"
                },
                "address": {
                  "zipCode": "string",
                  "street": "string",
                  "number": "number",
                  "complement": "string"
                },
                "rating": {
                  "type": "number"
                },
                "specialty": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "admin": {
                  "fullName": "string",
                  "cpf": "string"
                },
                "units": {
                  "type": "array",
                  "$ref": "RestaurantUnit"
                },
                "attendants": {
                  "type": "array",
                  "$ref": "User"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Invalid format"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "string"
                  },
                  "cnpj": {
                    "type": "string"
                  },
                  "address": {
                    "zipCode": "string",
                    "street": "string",
                    "number": "number",
                    "complement": "string"
                  },
                  "rating": {
                    "type": "number"
                  },
                  "units": {
                    "type": "array",
                    "$ref": "RestaurantUnit"
                  },
                  "attendants": {
                    "type": "array",
                    "$ref": "User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurant/:id/delete/": {
      "delete": {
        "summary": "Delete registered Restaraunt",
        "description": "Endpoint to delete restaurant",
        "tags": [
          "Restaurants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "properties": {
                  "name": {
                    "type": "Novo nome"
                  },
                  "logo": {
                    "type": "foto-de-pizza.jpg"
                  },
                  "cnpj": {
                    "type": "000.0000.000/0000-1"
                  },
                  "address": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  },
                  "units": {
                    "type": "array",
                    "$ref": "RestaurantUnit"
                  },
                  "attendants": {
                    "type": "array",
                    "$ref": "User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/units/": {
      "post": {
        "summary": "Register a restaurant Unit",
        "description": "Endpoint to register a restaurant Unit",
        "tags": [
          "Restaurant Units"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cnpj": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "zipCode": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "number"
                      },
                      "complement": {
                        "type": "string"
                      }
                    }
                  },
                  "contact": {
                    "type": "string"
                  },
                  "attendants": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "zipCode": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "number": {
                          "type": "number"
                        },
                        "complement": {
                          "type": "string"
                        }
                      }
                    },
                    "rating": {
                      "type": "number"
                    },
                    "units": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/RestaurantUnit"
                      }
                    },
                    "attendants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Restaurant already exists!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/units/list/": {
      "post": {
        "summary": "List all restaurant Units",
        "description": "Endpoint to list all restaurant units",
        "tags": [
          "Restaurant Units"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cnpj": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "zipCode": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "number"
                      },
                      "complement": {
                        "type": "string"
                      }
                    }
                  },
                  "contact": {
                    "type": "string"
                  },
                  "attendants": {
                    "type": "array",
                    "items": {
                      "$ref": "#/src/models/User"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "zipCode": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "number": {
                          "type": "number"
                        },
                        "complement": {
                          "type": "string"
                        }
                      }
                    },
                    "rating": {
                      "type": "number"
                    },
                    "units": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/RestaurantUnit"
                      }
                    },
                    "attendants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Restaurant already exists!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/units/:id/update/": {
      "patch": {
        "summary": "Update a restaurant Unit",
        "description": "Endpoint to update a restaurant unit",
        "tags": [
          "Restaurant Units"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "type": "number",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cnpj": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "zipCode": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "number"
                      },
                      "complement": {
                        "type": "string"
                      }
                    }
                  },
                  "contact": {
                    "type": "string"
                  },
                  "attendants": {
                    "type": "array",
                    "items": {
                      "$ref": "#/src/models/User"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "zipCode": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "number": {
                          "type": "number"
                        },
                        "complement": {
                          "type": "string"
                        }
                      }
                    },
                    "rating": {
                      "type": "number"
                    },
                    "units": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/RestaurantUnit"
                      }
                    },
                    "attendants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Restaurant already exists!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/units/:id/delete/": {
      "delete": {
        "summary": "Delete a restaurant Unit",
        "description": "Endpoint to delete a restaurant unit",
        "tags": [
          "Restaurant Units"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "type": "number",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cnpj": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "zipCode": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "number"
                      },
                      "complement": {
                        "type": "string"
                      }
                    }
                  },
                  "contact": {
                    "type": "string"
                  },
                  "attendants": {
                    "type": "array",
                    "items": {
                      "$ref": "#/src/models/User"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "zipCode": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "number": {
                          "type": "number"
                        },
                        "complement": {
                          "type": "string"
                        }
                      }
                    },
                    "rating": {
                      "type": "number"
                    },
                    "units": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/RestaurantUnit"
                      }
                    },
                    "attendants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/src/models/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Restaurant already exists!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/product/": {
      "post": {
        "summary": "Register a product/food on registered Restaraunt",
        "description": "Endpoint to create product(food) restaurant",
        "tags": [
          "Foods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "in": "path",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "restaurantId": {
                    "type": "string",
                    "ref": "Restaurant"
                  },
                  "image": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "Number"
                  },
                  "price": {
                    "type": "string"
                  },
                  "isAvailable": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "restaurant": {
                  "id": 1
                },
                "image": {
                  "type": "hamburguer-image.jpg"
                },
                "name": {
                  "type": "Cheddar Chicken"
                },
                "quantity": {
                  "type": 2
                },
                "price": {
                  "type": "R$29,90"
                },
                "isAvailable": {
                  "type": "Disponível"
                },
                "description": {
                  "type": "Burger 140g de frango com bacon, cheddar cremoso, cebola roxa, pimenta do reino, no pão brioche."
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Product already registered"
          },
          "500": {
            "description": "Something went wrong"
          },
          "201": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "id": "number"
                    },
                    "image": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/:id/": {
      "get": {
        "summary": "List all products/foods on registered Restaraunt",
        "description": "Endpoint to list all products(foods) restaurant",
        "tags": [
          "Foods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "in": "path",
          "required": true
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "restaurantId": {
                    "type": "number"
                  },
                  "image": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "price": {
                    "type": "string"
                  },
                  "isAvailable": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "restaurant": {
                  "id": 1
                },
                "image": {
                  "type": "hamburguer-image.jpg"
                },
                "name": {
                  "type": "Cheddar Chicken"
                },
                "quantity": {
                  "type": 2
                },
                "price": {
                  "type": "R$29,90"
                },
                "description": {
                  "type": "Burger 140g de frango com bacon, cheddar cremoso, cebola roxa, pimenta do reino, no pão brioche."
                },
                "isAvailable": {
                  "type": "Disponível"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "201": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "id": "number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "Number"
                    },
                    "description": {
                      "type": "String"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/:id/update/": {
      "patch": {
        "summary": "Update a product/food on registered Restaraunt",
        "description": "Endpoint to update product(food) restaurant",
        "tags": [
          "Foods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true
          },
          {
            "name": "productId",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "image": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "price": {
                    "type": "string"
                  },
                  "isAvailable": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Product does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "id": "number"
                    },
                    "image": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    },
                    "isAvailable": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/:id/delete/": {
      "delete": {
        "summary": "Delete a product/food on registered Restaraunt",
        "description": "Endpoint to delete product(food) restaurant",
        "tags": [
          "Foods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true
          },
          {
            "name": "productId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Product does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "id": "number"
                    },
                    "image": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request/": {
      "post": {
        "summary": "Create request in a Restaraunt from a User/GuestLogin",
        "description": "Endpoint to create a request",
        "tags": [
          "Order"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "restaurantId",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "restaurant": {
                    "type": "string"
                  },
                  "customer": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "$ref": "Foods"
                  },
                  "status": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Aguardando aprovação",
                        "Ingredientes faltando",
                        "Produzindo",
                        "Pronto",
                        "Entregue",
                        "Cancelado"
                      ]
                    }
                  },
                  "attendant": {
                    "type": "string"
                  },
                  "table": {
                    "type": "number"
                  },
                  "discountTicket": {
                    "type": "string"
                  },
                  "totalAmount": {
                    "type": "number"
                  },
                  "isPaid": {
                    "type": "boolean"
                  },
                  "paidAt": {
                    "type": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "string"
                    },
                    "customer": {
                      "type": "string"
                    },
                    "items": {
                      "type": "array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Aguardando aprovação",
                          "Ingredientes faltando",
                          "Produzindo",
                          "Pronto",
                          "Entregue",
                          "Cancelado"
                        ]
                      }
                    },
                    "attendant": {
                      "type": "string"
                    },
                    "table": {
                      "type": "number"
                    },
                    "discountTicket": {
                      "type": "string"
                    },
                    "totalAmount": {
                      "type": "number"
                    },
                    "isPaid": {
                      "type": "boolean"
                    },
                    "paidAt": {
                      "type": "date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request/list/": {
      "get": {
        "summary": "List all request from a User (exclusively)",
        "description": "Endpoint to list requests from user",
        "tags": [
          "Order"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": {
          "name": "id",
          "in": "path",
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "string"
                    },
                    "customer": {
                      "type": "string"
                    },
                    "items": {
                      "type": "array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Aguardando aprovação",
                          "Ingredientes faltando",
                          "Produzindo",
                          "Pronto",
                          "Entregue",
                          "Cancelado"
                        ]
                      }
                    },
                    "attendant": {
                      "type": "string"
                    },
                    "table": {
                      "type": "number"
                    },
                    "discountTicket": {
                      "type": "string"
                    },
                    "totalAmount": {
                      "type": "number"
                    },
                    "isPaid": {
                      "type": "boolean"
                    },
                    "paidAt": {
                      "type": "date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request/:id/": {
      "get": {
        "summary": "List/detail specific request from a User (exclusively)",
        "description": "Endpoint to request detail from user",
        "tags": [
          "Order"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "string"
                    },
                    "customer": {
                      "type": "string"
                    },
                    "items": {
                      "type": "array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Aguardando aprovação",
                          "Ingredientes faltando",
                          "Produzindo",
                          "Pronto",
                          "Entregue",
                          "Cancelado"
                        ]
                      }
                    },
                    "attendant": {
                      "type": "string"
                    },
                    "table": {
                      "type": "number"
                    },
                    "discountTicket": {
                      "type": "string"
                    },
                    "totalAmount": {
                      "type": "number"
                    },
                    "isPaid": {
                      "type": "boolean"
                    },
                    "paidAt": {
                      "type": "date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request/:id/update/": {
      "patch": {
        "summary": "Update request from a User (exclusively)",
        "description": "Endpoint to update a request from user",
        "tags": [
          "Order"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": "array",
                  "schema": {
                    "restaurant": {
                      "type": "string"
                    },
                    "customer": {
                      "type": "string"
                    },
                    "items": {
                      "type": "array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Aguardando aprovação",
                          "Ingredientes faltando",
                          "Produzindo",
                          "Pronto",
                          "Entregue",
                          "Cancelado"
                        ]
                      }
                    },
                    "attendant": {
                      "type": "string"
                    },
                    "table": {
                      "type": "number"
                    },
                    "discountTicket": {
                      "type": "string"
                    },
                    "totalAmount": {
                      "type": "number"
                    },
                    "isPaid": {
                      "type": "boolean"
                    },
                    "paidAt": {
                      "type": "date"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Request not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": [
                          "Aguardando aprovação",
                          "Ingredientes faltando",
                          "Produzindo",
                          "Pronto",
                          "Entregue",
                          "Cancelado"
                        ]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request/:id/delete/": {
      "delete": {
        "summary": "Delete request from a User (exclusively)",
        "description": "Endpoint to update a request from user",
        "tags": [
          "Order"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Request not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!"
          }
        }
      }
    },
    "/dashboard/summary/:unitId": {
      "get": {
        "summary": "Get dashboard summary for a restaurant unit",
        "description": "Returns general summary information including revenue, orders and top products",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the restaurant unit"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard summary data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/DashboardSummary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid unit ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/dashboard/revenue/:unitId": {
      "get": {
        "summary": "Get revenue report for a restaurant unit",
        "description": "Returns revenue data and period comparisons",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the restaurant unit"
          }
        ],
        "responses": {
          "200": {
            "description": "Revenue report data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/RevenueReport"
                }
              }
            }
          },
          "400": {
            "description": "Invalid unit ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/dashboard/orders/:unitId": {
      "get": {
        "summary": "Get orders report for a restaurant unit",
        "description": "Returns order statistics and counts by status",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the restaurant unit"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders report data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/OrdersReport"
                }
              }
            }
          },
          "400": {
            "description": "Invalid unit ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/dashboard/top-products/:unitId": {
      "get": {
        "summary": "Get top selling products for a restaurant unit",
        "description": "Returns most sold products ranked by quantity",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the restaurant unit"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5
            },
            "description": "Number of top products to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Top products data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/schemas/TopProduct"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid unit ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/dashboard/daily-revenue/:unitId": {
      "get": {
        "summary": "Get daily revenue data for a restaurant unit",
        "description": "Returns revenue data broken down by day for a specified date range",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the restaurant unit"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for the report (YYYY-MM-DD)"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for the report (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Daily revenue data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/schemas/DailyRevenue"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid unit ID or date format"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}