{
  "openapi": "3.0.0",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "info": {
    "title": "Seu Garçom Docs",
    "version": "0.1.2",
    "description": "Seu Garçom Swagger Docs"
  },
  "servers": [
    {
      "url": "http://localhost:3333/v0",
      "description": "Test API"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Endpoint for login",
        "tags": ["Auth"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "body",
          "email": "string",
          "password": "string"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {       
                  "properties": {
                    "email": {
                        "type": "string"
                      },
                    "password": {
                        "type": "string"
                      }
                  }     
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "jubinilson_godinilson@gmail.com",
                    "password": "senha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "User already exists"
          },
          "200": {
            "description": "Logged in!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Auth"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "User register",
        "description": "Endpoint for register",
        "tags": ["Auth"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "body",
          "firstName": "string",
          "lastName": "string",
          "email": "string",
          "phone": "string",
          "password": "string"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Fulano",
                    "lastName": "Cicrano",
                    "email": "jubinilson_godinilson@gmail.com",
                    "phone": "+5583999998888",
                    "password": "senha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "User already exists"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "summary": "User register for admin",
        "description": "Endpoint for register",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "body",
          "firstName": "string",
          "lastName": "string",
          "email": "string",
          "phone": "string",
          "password": "string"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Fulano",
                    "lastName": "Cicrano",
                    "email": "jubinilson_godinilson@gmail.com",
                    "phone": "+5583999998888",
                    "password": "senha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "User already exists"
          },
          "201": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/get": {
      "get": {
        "summary": "Get all registered Users",
        "description": "Endpoint for list users",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Fulano",
                    "lastName": "Cicrano",
                    "email": "jubinilson_godinilson@gmail.com",
                    "phone": "+5583999998888",
                    "password": "senha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/get/:id": {
      "get": {
        "summary": "Get registered User by Id",
        "description": "Endpoint to get user by id",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "id": "id",
            "name": "name",
            "in": "query",
            "description": "User name for search",
            "required": "true"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Fulano",
                    "lastName": "Cicrano",
                    "email": "jubinilson_godinilson@gmail.com",
                    "phone": "+5583999998888",
                    "password": "senha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/update": {
      "patch": {
        "summary": "Update registered User",
        "description": "Endpoint to update user",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Cicrano",
                    "lastName": "Cicaranos",
                    "email": "jubinilson_@gmail.com",
                    "phone": "+5583999998888",
                    "password": "senha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/delete": {
      "delete": {
        "summary": "Delete registered User",
        "description": "Endpoint to delete user",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "user": {
                  "value": {
                    "id": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/create": {
      "post": {
        "summary": "Register a restaurant",
        "description": "Endpoint to register a restaurant",
        "tags": ["Restaurants"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "body",
          "name": "string",
          "address": "string",
          "cnpj": "string",
          "logo": "string",
          "units": {
            "manager": "[string]",
            "address": "[string]"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Restaurants"
              },
              "examples": {
                "user": {
                  "value": {
                    "id": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Restaurant already exists!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Restaurants"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/list": {
      "get": {
        "summary": "List all registered restaurant",
        "description": "Endpoint to list registered Restaurants",
        "tags": ["Restaurants"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "query",
          "id": "number"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Restaurants"
              },
              "examples": {
                "user": {
                  "value": {
                    "id": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/get/:id": {
      "get": {
        "summary": "Get registered Restaurant by Id",
        "description": "Endpoint to get registered restaurant by id",
        "tags": ["Restaurants"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "id": "id",
          "name": "name",
          "in": "query",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Restaurants"
              },
              "examples": {
                "user": {
                  "value": {
                    "id": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/:id/update": {
      "patch": {
        "summary": "Update registered Restaurant",
        "description": "Endpoint to update restaurant",
        "tags": ["Restaurants"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "id": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
                            "properties": {
                "name": {
                  "type": "String"
                },
                "logo": {
                  "type": "String"
                },
                "cnpj": {
                  "type": "String"
                },
                "address": {
                  "type": "String"
                },
                "rating": {
                  "type": "Number"
                },
                "units": {
                  "type": "Array",
                  "$ref": "RestaurantUnit"
                },
                "attendants": {
                  "type": "Array",
                  "$ref": "User"
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "id": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Invalid format"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
              "properties": {
                "name": {
                  "type": "String"
                },
                "logo": {
                  "type": "String"
                },
                "cnpj": {
                  "type": "String"
                },
                "address": {
                  "type": "String"
                },
                "rating": {
                  "type": "Number"
                },
                "units": {
                  "type": "Array",
                  "$ref": "RestaurantUnit"
                },
                "attendants": {
                  "type": "Array",
                  "$ref": "User"
                }
               }
              }
            }
          }
        }
      }
    },
    "/restaurants/:id/delete": {
      "delete": {
        "summary": "Delete registered Restaraunt",
        "description": "Endpoint to delete restaurant",
        "tags": ["Restaurants"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "name": "id",
          "required": "true",
          "schema": {
            "type": "string"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "properties": {
                "name": {
                  "type": "String"
                },
                "logo": {
                  "type": "String"
                },
                "cnpj": {
                  "type": "String"
                },
                "address": {
                  "type": "String"
                },
                "rating": {
                  "type": "Number"
                },
                "units": {
                  "type": "Array",
                  "$ref": "RestaurantUnit"
                },
                "attendants": {
                  "type": "Array",
                  "$ref": "User"
                }
              },
              "examples": {
                "id": "1"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Restaurant does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "properties": {
                  "name": {
                    "type": "Novo nome"
                  },
                  "logo": {
                    "type": "foto-de-pizza.jpg"
                  },
                  "cnpj": {
                    "type": "000.0000.000/0000-1"
                  },
                  "address": {
                    "type": "String"
                  },
                  "rating": {
                    "type": "Number"
                  },
                  "units": {
                    "type": "Array",
                    "$ref": "RestaurantUnit"
                  },
                  "attendants": {
                    "type": "Array",
                    "$ref": "User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/:id/products": {
      "post": {
        "summary": "Register a product/food on registered Restaraunt",
        "description": "Endpoint to create product(food) restaurant",
        "tags": ["Foods"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                    "restaurant": {
                      "id": "Number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "String"
                    },
                    "description": {
                      "type": "String"
                    }
                 }
              },
              "examples": {
                    "restaurant": {
                      "id": 1
                    },
                    "image": {
                      "type": "hamburguer-image.jpg"
                    },
                    "name": {
                      "type": "Cheddar Chicken"
                    },
                    "quantity": {
                      "type": 2
                    },
                    "price": {
                      "type": "R$29,90"
                    },
                    "description": {
                      "type": "Burger 140g de frango com bacon, cheddar cremoso, cebola roxa, pimenta do reino, no pão brioche."
                    }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Product already registered"
          },
          "500": {
            "description": "Something went wrong"
          },
          "201": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                        "id": "number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "Number"
                    },
                    "description": {
                      "type": "String"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
     "/restaurants/:id/products/": {
      "get": {
        "summary": "List all products/foods on registered Restaraunt",
        "description": "Endpoint to list all products(foods) restaurant",
        "tags": ["Foods"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                    "restaurant": {
                      "type": "Number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "String"
                    },
                    "description": {
                      "type": "String"
                    }
                 }
              },
              "examples": {
                    "restaurant": {
                      "id": 1
                    },
                    "image": {
                      "type": "hamburguer-image.jpg"
                    },
                    "name": {
                      "type": "Cheddar Chicken"
                    },
                    "quantity": {
                      "type": 2
                    },
                    "price": {
                      "type": "R$29,90"
                    },
                    "description": {
                      "type": "Burger 140g de frango com bacon, cheddar cremoso, cebola roxa, pimenta do reino, no pão brioche."
                    }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "201": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                        "id": "number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "Number"
                    },
                    "description": {
                      "type": "String"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/:id/products/:id": {
      "get": {
        "summary": "Get a product/food on registered Restaraunt",
        "description": "Endpoint to get product(food) restaurant",
        "tags": ["Foods"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "restaurantId": "number",
          "foodId": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "category": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "String"
                    },
                    "description": {
                      "type": "String"
                    },
                    "isAvailable": {
                      "type": "Boolean"
                    }
                 }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Product does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                        "id": "number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "Number"
                    },
                    "description": {
                      "type": "String"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/:id/products/:id/update": {
      "patch": {
        "summary": "Update a product/food on registered Restaraunt",
        "description": "Endpoint to update product(food) restaurant",
        "tags": ["Foods"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "restaurantId": "number",
          "foodId": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "category": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "String"
                    },
                    "description": {
                      "type": "String"
                    },
                    "isAvailable": {
                      "type": "Boolean"
                    }
                 }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Product does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                        "id": "number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "Number"
                    },
                    "description": {
                      "type": "String"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/:id/products/:id/delete": {
      "delete": {
        "summary": "Delete a product/food on registered Restaraunt",
        "description": "Endpoint to delete product(food) restaurant",
        "tags": ["Foods"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "restaurantId": "number",
          "foodId": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "category": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "String"
                    },
                    "description": {
                      "type": "String"
                    },
                    "isAvailable": {
                      "type": "Boolean"
                    }
                 }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Product does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                        "id": "number"
                    },
                    "image": {
                      "type": "String"
                    },
                    "name": {
                      "type": "String"
                    },
                    "quantity": {
                      "type": "Number"
                    },
                    "price": {
                      "type": "Number"
                    },
                    "description": {
                      "type": "String"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/:restaurantId/request": {
      "post": {
        "summary": "Create request in a Restaraunt from a User/GuestLogin",
        "description": "Endpoint to create a request",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "number",
          "restaurantId": "number",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/request/list": {
      "get": {
        "summary": "List all request from a User (exclusively)",
        "description": "Endpoint to list requests from user",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "string",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                  "type": "Array",
                  "schema": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/request/:id": {
      "get": {
        "summary": "List/detail specific request from a User (exclusively)",
        "description": "Endpoint to request detail from user",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "string",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                  "type": "Array",
                  "schema": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Does not exist"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/request/:id/update": {
      "patch": {
        "summary": "Update request from a User (exclusively)",
        "description": "Endpoint to update a request from user",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "string",
          "requestId": "string",
          "required": "true"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                 "properties": {
                  "type": "Array",
                  "schema": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Request not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "restaurant": {
                      "type": "String"
                    },
                    "customer": {
                      "type": "String"
                    },
                    "items": {
                      "type": "Array",
                      "$ref": "Foods"
                    },
                    "status": {
                      "type": "Array",
                      "items": {
                        "type": "String",
                        "enum": ["Aguardando aprovação", "Ingredientes faltando", "Produzindo", "Pronto", "Entregue", "Cancelado"]
                      }
                    },
                    "attendant": {
                      "type": "String"
                    },
                    "table": {
                      "type": "Number"
                    },
                    "discountTicket": {
                      "type": "String"
                    },
                    "totalAmount": {
                      "type": "Number"
                    },
                    "isPaid": {
                      "type": "Boolean"
                    },
                    "paidAt": {
                      "type": "Date"
                    }
                 }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id/request/:id/delete": {
      "delete": {
        "summary": "Update request from a User (exclusively)",  
        "description": "Endpoint to update a request from user",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": {
          "in": "path",
          "id": "string",
          "requestId": "string",
          "required": "true"
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Request not found"
          },
          "500": {
            "description": "Something went wrong"
          },
          "200": {
            "description": "OK!"
          }
        }
      }
    }
  }
}
